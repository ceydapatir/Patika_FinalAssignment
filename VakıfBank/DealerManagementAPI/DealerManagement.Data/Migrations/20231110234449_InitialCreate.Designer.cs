// <auto-generated />
using System;
using DealerManagement.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DealerManagement.Data.Migrations
{
    [DbContext(typeof(DealerManagementDBContext))]
    [Migration("20231110234449_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DealerManagement.Data.Domain.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("TRY");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 693, DateTimeKind.Utc).AddTicks(5817));

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNumber = "9012345678901234",
                            CurrencyCode = "TRY",
                            IBAN = "TR123456789012345678901234",
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AccountNumber = "1012345678901234",
                            CurrencyCode = "TRY",
                            IBAN = "TR123456781012345678901234",
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AccountNumber = "2012345678901234",
                            CurrencyCode = "TRY",
                            IBAN = "TR123456782012345678901234",
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 693, DateTimeKind.Utc).AddTicks(9057));

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressLine1 = "İvedik Sanayi",
                            City = "Yenimahalle",
                            CompanyId = 1,
                            Country = "Turkey",
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostalCode = "06370",
                            Province = "Ankara"
                        },
                        new
                        {
                            Id = 2,
                            AddressLine1 = "Ostim",
                            City = "Yenimahalle",
                            CompanyId = 2,
                            Country = "Turkey",
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostalCode = "06370",
                            Province = "Ankara"
                        });
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CardHolder")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<decimal?>("ExpenseLimit")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ExpireDate")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 693, DateTimeKind.Utc).AddTicks(6978));

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 2,
                            CVV = "123",
                            CardHolder = "Merve Topuz",
                            CardNumber = "1234567890123456",
                            ExpenseLimit = 10000m,
                            ExpireDate = "12/28",
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 3,
                            CVV = "321",
                            CardHolder = "Yiğit Aslan",
                            CardNumber = "1234567890123457",
                            ExpenseLimit = 10000m,
                            ExpireDate = "12/28",
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.CheckingAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 693, DateTimeKind.Utc).AddTicks(3816));

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("CheckingAccounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            Balance = 0m,
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 2,
                            Balance = 1000m,
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 694, DateTimeKind.Utc).AddTicks(5433));

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "EGE AKÜ",
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mail = "salihekin@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "EGE AKÜ BAYİ 1",
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mail = "mervetopuz@gmail.com"
                        });
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.CompanyCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("CardType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 694, DateTimeKind.Utc).AddTicks(1317));

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyCards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardName = "Card 1",
                            CardNumber = "1234567890123456",
                            CardType = "credit",
                            CompanyId = 2,
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CardName = "Card 2",
                            CardNumber = "1234567890123457",
                            CardType = "deposit",
                            CompanyId = 2,
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.CompanyStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 694, DateTimeKind.Utc).AddTicks(6321));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.ToTable("CompanyStocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            Stock = 50
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            Stock = 30
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 2,
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Dealer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ContractDeadline")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 694, DateTimeKind.Utc).AddTicks(9326));

                    b.Property<decimal>("ProfitMargin")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.HasIndex("SupplierId");

                    b.ToTable("Dealers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 2,
                            ContractDeadline = new DateTime(2025, 11, 11, 2, 44, 49, 697, DateTimeKind.Local).AddTicks(350),
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProfitMargin = 10.2m,
                            SupplierId = 1
                        });
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.DepositAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("DebtTotal")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 693, DateTimeKind.Utc).AddTicks(1158));

                    b.Property<decimal>("Interest")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpeningAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("DepositAccounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 3,
                            DebtTotal = 0m,
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Interest = 12m,
                            OpeningAmount = 1000m
                        });
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 696, DateTimeKind.Utc).AddTicks(8206));

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("dealer");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            EmployeeNumber = "10001",
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mail = "salihekin@gmail.com",
                            Name = "Salih",
                            Password = "5d41402abc4b2a76b9719d911017c592",
                            Role = "admin",
                            Surname = "Ekin"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            EmployeeNumber = "10002",
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mail = "mervetopuz@gmail.com",
                            Name = "Merve",
                            Password = "5d41402abc4b2a76b9719d911017c592",
                            Role = "dealer",
                            Surname = "Topuz"
                        });
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 695, DateTimeKind.Utc).AddTicks(2782));

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.MessageContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 695, DateTimeKind.Utc).AddTicks(4523));

                    b.Property<DateTime>("MessageDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 695, DateTimeKind.Utc).AddTicks(4896));

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("MessageContents");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BillingCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 695, DateTimeKind.Utc).AddTicks(6676));

                    b.Property<decimal>("KDVPriceSum")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Cart");

                    b.Property<string>("SupplierIBAN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("UnitPriceSum")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 2,
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KDVPriceSum = 0m,
                            SupplierIBAN = "TR123456789012345678901234",
                            TotalPrice = 0m,
                            UnitPriceSum = 0m
                        });
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 695, DateTimeKind.Utc).AddTicks(9896));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 696, DateTimeKind.Utc).AddTicks(2811));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Confirmation Awaited");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CardId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("500");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 696, DateTimeKind.Utc).AddTicks(6553));

                    b.Property<decimal>("KDV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(22m);

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusamus veniam corporis magnam aliquid officia explicabo expedita. Veritatis qui ipsum odio nihil facilis velit suscipit? A iusto incidunt nostrum nam alias.",
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KDV = 22m,
                            ProductCode = "10001",
                            ProductName = "Ürün 1",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusamus veniam corporis magnam aliquid officia explicabo expedita. Veritatis qui ipsum odio nihil facilis velit suscipit? A iusto incidunt nostrum nam alias.",
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KDV = 22m,
                            ProductCode = "10002",
                            ProductName = "Ürün 2",
                            UnitPrice = 20m
                        });
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 10, 23, 44, 49, 694, DateTimeKind.Utc).AddTicks(3530));

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("Supliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            IBAN = "TR123456789012345678901234",
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Address", b =>
                {
                    b.HasOne("DealerManagement.Data.Domain.Company", "Company")
                        .WithOne("CompanyAddress")
                        .HasForeignKey("DealerManagement.Data.Domain.Address", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Address_Company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Card", b =>
                {
                    b.HasOne("DealerManagement.Data.Domain.Account", "Account")
                        .WithOne("Card")
                        .HasForeignKey("DealerManagement.Data.Domain.Card", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Card_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.CheckingAccount", b =>
                {
                    b.HasOne("DealerManagement.Data.Domain.Account", "Account")
                        .WithOne("CheckingAccount")
                        .HasForeignKey("DealerManagement.Data.Domain.CheckingAccount", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CheckingAccount_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.CompanyCard", b =>
                {
                    b.HasOne("DealerManagement.Data.Domain.Company", "Company")
                        .WithMany("Cards")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CompanyCard_Company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.CompanyStock", b =>
                {
                    b.HasOne("DealerManagement.Data.Domain.Company", "Company")
                        .WithMany("CompanyStocks")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CompanyStock_Company");

                    b.HasOne("DealerManagement.Data.Domain.Product", "Product")
                        .WithMany("CompanyStocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CompanyStock_Product");

                    b.Navigation("Company");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Dealer", b =>
                {
                    b.HasOne("DealerManagement.Data.Domain.Company", "Company")
                        .WithOne("Dealer")
                        .HasForeignKey("DealerManagement.Data.Domain.Dealer", "CompanyId")
                        .IsRequired()
                        .HasConstraintName("FK_Dealer_Company");

                    b.HasOne("DealerManagement.Data.Domain.Supplier", "Supplier")
                        .WithMany("Dealers")
                        .HasForeignKey("SupplierId")
                        .IsRequired()
                        .HasConstraintName("FK_Dealer_Supplier");

                    b.Navigation("Company");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.DepositAccount", b =>
                {
                    b.HasOne("DealerManagement.Data.Domain.Account", "Account")
                        .WithOne("DepositAccount")
                        .HasForeignKey("DealerManagement.Data.Domain.DepositAccount", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DepositAccount_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Employee", b =>
                {
                    b.HasOne("DealerManagement.Data.Domain.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Employee_Company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Message", b =>
                {
                    b.HasOne("DealerManagement.Data.Domain.Employee", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Message_Sender");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.MessageContent", b =>
                {
                    b.HasOne("DealerManagement.Data.Domain.Message", "Message")
                        .WithMany("MessageContents")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MessageContent_Message");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Order", b =>
                {
                    b.HasOne("DealerManagement.Data.Domain.Company", "Company")
                        .WithMany("Orders")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Order_Company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.OrderItem", b =>
                {
                    b.HasOne("DealerManagement.Data.Domain.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrderItem_Order");

                    b.HasOne("DealerManagement.Data.Domain.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrderItem_Product");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Payment", b =>
                {
                    b.HasOne("DealerManagement.Data.Domain.Account", null)
                        .WithMany("Payments")
                        .HasForeignKey("AccountId");

                    b.HasOne("DealerManagement.Data.Domain.CompanyCard", "Card")
                        .WithMany("Payments")
                        .HasForeignKey("CardId")
                        .HasConstraintName("FK_Payment_CompanyCard");

                    b.HasOne("DealerManagement.Data.Domain.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("DealerManagement.Data.Domain.Payment", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Payment_Order");

                    b.Navigation("Card");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Supplier", b =>
                {
                    b.HasOne("DealerManagement.Data.Domain.Company", "Company")
                        .WithOne("Supplier")
                        .HasForeignKey("DealerManagement.Data.Domain.Supplier", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Supplier_Company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Account", b =>
                {
                    b.Navigation("Card")
                        .IsRequired();

                    b.Navigation("CheckingAccount")
                        .IsRequired();

                    b.Navigation("DepositAccount")
                        .IsRequired();

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Company", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("CompanyAddress");

                    b.Navigation("CompanyStocks");

                    b.Navigation("Dealer");

                    b.Navigation("Employees");

                    b.Navigation("Orders");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.CompanyCard", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Employee", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Message", b =>
                {
                    b.Navigation("MessageContents");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Product", b =>
                {
                    b.Navigation("CompanyStocks");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("DealerManagement.Data.Domain.Supplier", b =>
                {
                    b.Navigation("Dealers");
                });
#pragma warning restore 612, 618
        }
    }
}
